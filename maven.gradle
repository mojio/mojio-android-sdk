apply plugin: 'com.github.dcendents.android-maven'

def BINTRAY_SUBJECT = "mojio"
def BINTRAY_REPO = "maven"

def groupId = project.PUBLISH_GROUP_ID
def artifactId = project.PUBLISH_ARTIFACT_ID
def version = project.PUBLISH_VERSION

def localReleaseDest = "${buildDir}/release/${version}"
def archiveFilename = "${artifactId}-${version}.zip"

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives() {
    description = "Uploads all Maven artifacts to BinTray"
    group = "Maven"

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    repositories {
        mavenDeployer {
            repository(url: "https://api.bintray.com/maven/${BINTRAY_SUBJECT}/${BINTRAY_REPO}/${groupId}:${artifactId}/;publish=1") {
                authentication(userName: properties.getProperty('bintray.username'),
                               password: properties.getProperty('bintray.apikey'))
            }

            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
    }
}

task generateRelease(type: Zip, group: 'Maven') {
    description = "Generates a .zip file containing jars and poms for hosting on a Maven repo"

    from localReleaseDest
    destinationDir buildDir
    archiveName archiveFilename

    doLast {
        println "Release ${version} can be found at ${localReleaseDest}/"
        println "Release ${version} zipped can be found ${buildDir}/${archiveFilename}"
    }
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

uploadArchives.dependsOn(generateRelease)